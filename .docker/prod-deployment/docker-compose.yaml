version: '3.9'

services:
  db:
    image: postgres:latest
    container_name: openid-federation-datastore
    environment:
      POSTGRES_USER: ${DATASOURCE_USER}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
      POSTGRES_DB: ${DATASOURCE_DB}
    volumes:
      - /mnt/openid-federation/volumes/postgres:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DATASOURCE_DB} -U ${DATASOURCE_USER}" ]
      interval: 3s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  openid-federation-server:
    image: sphereonregistry.azurecr.io/federation-server:latest
    container_name: openid-federation-server
    environment:
      DATASOURCE_URL: ${DATASOURCE_URL}
      DATASOURCE_USER: ${DATASOURCE_USER}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      APP_KEY: ${APP_KEY}
      KMS_PROVIDER: ${KMS_PROVIDER}
      ROOT_IDENTIFIER: ${ROOT_IDENTIFIER}
    volumes:
      - ./config/openid-federation-server/application.properties:/app/application.properties
    depends_on:
      openid-federation-admin-server:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - frontend
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.openid-federation-server.entrypoints=websecure"
      - "traefik.http.routers.openid-federation-server.rule=${FEDERATION_HOSTS}"
      - "traefik.http.routers.openid-federation-server.tls.certresolver=acmeresolver"
      - "traefik.http.services.openid-federation-server.loadbalancer.server.port=8080"
      - "traefik.http.services.openid-federation-server.loadbalancer.server.scheme=http"
    restart: unless-stopped

  openid-federation-admin-server:
    image: sphereonregistry.azurecr.io/federation-admin-server:latest
    container_name: openid-federation-server-admin
    environment:
      DATASOURCE_URL: ${DATASOURCE_URL}
      DATASOURCE_USER: ${DATASOURCE_USER}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      APP_KEY: ${APP_KEY}
      KMS_PROVIDER: ${KMS_PROVIDER}
      ROOT_IDENTIFIER: ${ROOT_IDENTIFIER}
    volumes:
      - ./config/openid-federation-admin-server/application.properties:/app/application.properties
    depends_on:
      db:
        condition: service_healthy
    networks:
      - frontend
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.openid-federation-admin-server.entrypoints=websecure"
      - "traefik.http.routers.openid-federation-admin-server.rule=${FEDERATION_ADMIN_HOSTS}"
      - "traefik.http.routers.openid-federation-admin-server.tls.certresolver=acmeresolver"
      - "traefik.http.services.openid-federation-admin-server.loadbalancer.server.port=8080"
      - "traefik.http.services.openid-federation-admin-server.loadbalancer.server.scheme=http"
      # IP Whitelist middleware
      - "traefik.http.routers.openid-federation-admin-server.middlewares=admin-whitelist-sourceip"
      - "traefik.http.middlewares.admin-whitelist-sourceip.ipwhitelist.sourcerange=${ADMIN_IP_WHITELIST}"
    restart: unless-stopped

networks:
  frontend:
    external: true
  backend:
    driver: bridge
