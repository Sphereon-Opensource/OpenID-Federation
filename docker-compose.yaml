services:
  db:
    image: postgres:latest
    container_name: openid-federation-datastore
    environment:
      POSTGRES_USER: ${DATASOURCE_USER}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
      POSTGRES_DB: ${DATASOURCE_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - openid_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DATASOURCE_DB} -U ${DATASOURCE_USER}" ]
      interval: 3s
      timeout: 5s
      retries: 20

  local-kms-db:
    image: postgres:latest
    container_name: openid-federation-local-kms-datastore
    environment:
      POSTGRES_USER: ${LOCAL_KMS_DATASOURCE_USER}
      POSTGRES_PASSWORD: ${LOCAL_KMS_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${LOCAL_KMS_DATASOURCE_DB}
    ports:
      - "5433:5432"
    volumes:
      - local_kms_data:/var/lib/postgresql/data
    networks:
      - openid_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${LOCAL_KMS_DATASOURCE_DB} -U ${LOCAL_KMS_DATASOURCE_USER}" ]
      interval: 3s
      timeout: 5s
      retries: 20

  federation-server:
    build:
      context: .
      dockerfile: ./.docker/federation-server/Dockerfile
    ports:
      - "8080:8080"
    container_name: openid-federation-server
    environment:
      DATASOURCE_URL: ${DATASOURCE_URL}
      DATASOURCE_USER: ${DATASOURCE_USER}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      APP_KEY: ${APP_KEY}
      KMS_PROVIDER: ${KMS_PROVIDER}
      LOCAL_KMS_DATASOURCE_URL: ${LOCAL_KMS_DATASOURCE_URL}
      LOCAL_KMS_DATASOURCE_USER: ${LOCAL_KMS_DATASOURCE_USER}
      LOCAL_KMS_DATASOURCE_PASSWORD: ${LOCAL_KMS_DATASOURCE_PASSWORD}
      LOCAL_KMS_DATASOURCE_DB: ${LOCAL_KMS_DATASOURCE_DB}
      ROOT_IDENTIFIER: ${ROOT_IDENTIFIER}
    depends_on:
      admin-server:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - openid_network

  admin-server:
    build:
      context: .
      dockerfile: ./.docker/admin-server/Dockerfile
    ports:
      - "8081:8080"
    container_name: openid-federation-server-admin
    environment:
      DATASOURCE_URL: ${DATASOURCE_URL}
      DATASOURCE_USER: ${DATASOURCE_USER}
      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
      APP_KEY: ${APP_KEY}
      KMS_PROVIDER: ${KMS_PROVIDER}
      LOCAL_KMS_DATASOURCE_URL: ${LOCAL_KMS_DATASOURCE_URL}
      LOCAL_KMS_DATASOURCE_USER: ${LOCAL_KMS_DATASOURCE_USER}
      LOCAL_KMS_DATASOURCE_PASSWORD: ${LOCAL_KMS_DATASOURCE_PASSWORD}
      LOCAL_KMS_DATASOURCE_DB: ${LOCAL_KMS_DATASOURCE_DB}
      ROOT_IDENTIFIER: ${ROOT_IDENTIFIER}

    depends_on:
      db:
        condition: service_healthy
      local-kms-db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - openid_network

  keycloak:
    image: keycloak/keycloak:26.0
    command:
      - start-dev
      - --import-realm
    ports:
      - "8082:8080"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_HEALTH_ENABLED=true
    volumes:
      - ./.docker/keycloak:/opt/keycloak/data/import/
    restart: always
    networks:
      - openid_network
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1" ]
      interval: 3s
      timeout: 10s
      retries: 10
      start_period: 10s

  keycloak-dev:
    image: keycloak/keycloak:26.0
    command:
      - start-dev
      - --import-realm
    ports:
      - "8082:8080"
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
    volumes:
      - ./.docker/keycloak-dev:/opt/keycloak/data/import/
    restart: always
    networks:
      - openid_network

networks:
  openid_network:
    driver: bridge

volumes:
  postgres_data:
  local_kms_data:
