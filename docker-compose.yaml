services:
  db:
    image: postgres:latest
    container_name: openid-federation-datastore
    user: postgres
    security_opt:
      - no-new-privileges:true
    env_file:
      - path: .env
        required: false
      - path: .env.local
        required: false
    environment:
      - POSTGRES_USER
        POSTGRES_PASSWORD
        POSTGRES_DB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - openid_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DATASOURCE_DB} -U ${DATASOURCE_USER}" ]
      interval: 3s
      timeout: 5s
      retries: 20

  federation-server:
    image: sphereon/openid-federation-server:latest
    build:
      context: .
      dockerfile: ./.docker/federation-server/Dockerfile
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1536M
        reservations:
          cpus: '0.5'
          memory: 768M
    ports:
      - "8080:8080"
    env_file:
      - path: .env
        required: false
      - path: .env.local
        required: false
    environment:
      - DATASOURCE_URL
        DATASOURCE_USER
        DATASOURCE_PASSWORD
        APP_KEY
        KMS_PROVIDER
        ROOT_IDENTIFIER
        DEV_MODE
        LOGGER_SEVERITY
    #    environment:
    #      DATASOURCE_URL: ${DATASOURCE_URL}
    #      DATASOURCE_USER: ${DATASOURCE_USER}
    #      DATASOURCE_PASSWORD: ${DATASOURCE_PASSWORD}
    #      APP_KEY: ${APP_KEY}
    #      ROOT_IDENTIFIER: ${ROOT_IDENTIFIER}
    #      LOGGER_SEVERITY: ${LOGGER_SEVERITY}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./logs/openid-federation-server:/tmp/logs
    user: root
    entrypoint: >
      /bin/sh -c "java -jar /app/federation-server.jar"
    networks:
      - openid_network
  admin-server:
    image: sphereon/openid-federation-admin-server:latest
    build:
      context: .
      dockerfile: ./.docker/admin-server/Dockerfile
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1536M
        reservations:
          cpus: '0.5'
          memory: 768M
    ports:
      - "8081:8080"
    env_file:
      - path: .env
        required: false
      - path: .env.local
        required: false
    environment:
      - DATASOURCE_URL
        DATASOURCE_USER
        DATASOURCE_PASSWORD
        APP_KEY
        KMS_PROVIDER
        ROOT_IDENTIFIER
        OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI
        DEV_MODE
        LOGGER_SEVERITY
        LOGGER_OUTPUT
    depends_on:
      db:
        condition: service_healthy
    networks:
      - openid_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./logs/openid-federation-admin-server:/tmp/logs
    user: root
    entrypoint: >
      /bin/sh -c "java -jar /app/admin-server.jar"
  keycloak:
    image: keycloak/keycloak:26.0
    user: keycloak
    security_opt:
      - no-new-privileges:true
    command:
      - start-dev
      - --import-realm
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1536M
        reservations:
          cpus: '0.5'
          memory: 768M
    ports:
      - "8082:8080"
    env_file:
      - path: .env
        required: false
      - path: .env.local
        required: false
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME
      - KC_BOOTSTRAP_ADMIN_PASSWORD
      - KC_HEALTH_ENABLED
      - JAVA_OPTS
    #      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
    #      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
    #      - KC_HEALTH_ENABLED=true
    #      - JAVA_OPTS=-XX:MaxRAMPercentage=75.0 -XX:InitialRAMPercentage=50.0 -XX:+UseG1GC
    volumes:
      - ./.docker/keycloak:/opt/keycloak/data/import/
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - openid_network
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000; echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost:9000\r\nConnection: close\r\n\r\n' >&3;cat <&3 | grep -q '\"status\": \"UP\"' && exit 0 || exit 1" ]
      interval: 3s
      timeout: 10s
      retries: 10
      start_period: 10s

networks:
  openid_network:
    driver: bridge

volumes:
  postgres_data:
  local_kms_data:
  logs:
